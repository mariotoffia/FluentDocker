name: CI

on:
  push:
    branches:
      - master
      - main
      - ci-gh-action-migration  # For testing GitHub Action Workflows
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOTNET_NOLOGO: 'true'
      DOTNET_CLI_TELEMETRY_OPTOUT: 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for GitVersion to work properly

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            6.0.x
            9.0.x

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1
        with:
          versionSpec: '5.x'
      
      - name: Determine version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Display GitVersion outputs
        run: |
          echo "Major: ${{ steps.gitversion.outputs.Major }}"
          echo "Minor: ${{ steps.gitversion.outputs.Minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.Patch }}"
          echo "NuGetVersion: ${{ steps.gitversion.outputs.NuGetVersion }}"

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release --no-restore /p:Version=${{ steps.gitversion.outputs.NuGetVersion }}

      - name: Run tests
        env:
          TERM: dumb
          DOTNET_CLI_UI_LANGUAGE: en-US
          ACT: ${{ github.actor == 'nektos/act' && 'true' || '' }}
        run: |
          if [ -n "$ACT" ]; then
            echo "Running in act environment - excluding container tests"
            dotnet test \
              --no-build \
              --configuration Release \
              --filter "TestCategory=CI&FullyQualifiedName!~FluentContainerBasicTests" \
              --logger "console;verbosity=detailed"
          else
            echo "Running in GitHub Actions environment"
            dotnet test \
              --no-build \
              --configuration Release \
              --filter "TestCategory=CI" \
              --collect:"XPlat Code Coverage" \
              --results-directory ./coverage \
              --settings coverletArgs.runsettings
          fi

      - name: SonarCloud Scan
        if: ${{ github.actor != 'nektos/act' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=mariotoffia_FluentDocker
            -Dsonar.organization=mariotoffia
            -Dsonar.cs.opencover.reportsPaths=./coverage/**/coverage.opencover.xml
            -Dsonar.coverage.exclusions=**Tests*.cs
            -Dsonar.projectVersion=${{ steps.gitversion.outputs.NuGetVersion }}

      - name: Create NuGet packages
        run: dotnet pack --configuration Release --no-build --output packages /p:Version=${{ steps.gitversion.outputs.NuGetVersion }}

      - name: Upload NuGet packages as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: nuget-packages
          path: packages/*.nupkg
          retention-days: 7

      - name: Publish NuGet packages
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
        run: |
          dotnet nuget push "packages/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate